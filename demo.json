{
    "Comment": "Demo",
    "StartAt": "GetOrderData",
    "States": {
      "GetOrderData": {
        "Type": "Task",
        "Resource": "arn:aws:states:::aws-sdk:s3:getObject",
        "Parameters": {
          "Bucket.$": "$.detail.bucket.name",
          "Key.$": "$.detail.object.key"
        },
        "Next": "ProcessOrderData",
        "ResultSelector": {
          "detail.$": "States.StringToJson($.Body)"
        }
      },
      "ProcessOrderData": {
        "Type": "Map",
        "InputPath": "$.detail",
        "ItemsPath": "$.orders",
        "MaxConcurrency": 2,
        "Iterator": {
          "StartAt": "ProcessData",
          "States": {
            "ProcessData": {
              "Type": "Task",
              "Resource": "arn:aws:lambda:ap-south-1:891377293198:function:demo-orders-function",
              "Next": "ProcessOrder",
              "ResultSelector": {
                "contact-info.$": "$.contact-info",
                "order-info.$": "$.order-info"
              },
              "Catch": [
                {
                  "ErrorEquals": ["States.TaskFailed"],
                  "Next": "PublishToSQS",
                  "ResultPath": null
                }
              ]
            },
            "ProcessOrder": {
              "Type": "Task",
              "Resource": "arn:aws:states:::dynamodb:putItem",
              "Parameters": {
                "TableName": "orders-demo-tbl",
                "Item": {
                  "orderId": {
                    "S.$": "$.order-info.orderId"
                  },
                  "item-id": {
                    "S.$": "$.order-info.item-id"
                  },
                  "qty": {
                    "S.$": "$.order-info.qty"
                  },
                  "contact-name": {
                    "S.$": "$.contact-info.name"
                  },
                  "contact-email": {
                    "S.$": "$.contact-info.email"
                  }
                }
              },
              "Retry": [
                {
                  "ErrorEquals": ["States.TaskFailed"],
                  "IntervalSeconds": 1,
                  "MaxAttempts": 2,
                  "BackoffRate": 2
                }
              ],
              "End": true
            },
            "PublishToSQS": {
              "Type": "Task",
              "Resource": "arn:aws:states:::sqs:sendMessage",
              "Parameters": {
                "QueueUrl": "https://sqs.ap-south-1.amazonaws.com/891377293198/demo-sqs",
                "MessageBody.$": "$"
              },
              "End": true
            }
          }
        },
        "End": true
      }
    }
  }